" Phillip Vo

" PLUGINS {{{
call plug#begin('~/.vim/plugged')
" Git
Plug 'tpope/vim-fugitive'
" Text Editing
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'jiangmiao/auto-pairs'
Plug 'SirVer/ultisnips'
" Notes
Plug 'vim-pandoc/vim-pandoc'
Plug 'vim-pandoc/vim-pandoc-syntax'
Plug 'vim-pandoc/vim-pandoc-after'
Plug 'christoomey/vim-tmux-navigator'
Plug 'dhruvasagar/vim-table-mode'
Plug 'junegunn/goyo.vim'
" FZF
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': '.install --all' }
Plug 'junegunn/fzf.vim'
" Miscellaneous
Plug 'w0rp/ale'
call plug#end()
" }}}
" LEADER {{{
let mapleader="," " leader is comma

" Align text
nnoremap <leader>Al :left<CR>
nnoremap <leader>Ac :center<CR>
nnoremap <leader>Ar :right<CR>
vnoremap <leader>Al :left<CR>
vnoremap <leader>Ac :center<CR>
vnoremap <leader>Ar :right<CR>

" Markdown Headings
nnoremap <leader>1 m`yypVr=``
nnoremap <leader>2 m`yypVr-``
nnoremap <leader>3 ^i### <esc>
nnoremap <leader>4 ^i#### <esc>
nnoremap <leader>5 ^i##### <esc>

" Spelling Error Quickfix
nnoremap <leader>sp :call FixLastSpellCheckError()<CR>

" FZF
map <leader>f :FZF<CR>

" Ale
map <leader>at :ALEToggle<cr>

" Notes (tmp)
nnoremap <leader>pl :!pandoc --pdf-engine=lualatex -H ~/resources/notes/template.tex -o %:r.pdf %<CR>
nnoremap <leader>pp :!pandoc --toc --pdf-engine=lualatex --filter pandoc-citeproc --bibliography=report.bib -H ~/resources/papers/template.tex -o %:r.pdf %<CR>
nnoremap <leader>pm :!pandoc -o %:r.pdf %<CR>
nnoremap <leader>v :!open %:r.pdf 2>&1 > /dev/null &<CR><CR>

" UltiSnips
nnoremap <leader>ue :UltiSnipsEdit<CR>

" Goyo
nnoremap <leader>G :Goyo<CR>
" }}}
" FILETYPES {{{
filetype plugin on

augroup filetypes
    au!

    au BufNewFile,BufRead *.md setlocal ft=markdown.tex spell ts=2 sts=2 sw=2 et ai si

    au Filetype gitcommit setlocal spell

    au FileType html,xhtml,xml,css setlocal ts=2 sts=2 sw=2 et ai
    au FileType javascript setlocal ts=2 sts=2 sw=2 et ai si noci 
    au FileType python setlocal ts=4 sts=4 sw=4 et ai si cinwords=if,elif,else,for,while,try,except,finally,def,class

    au FileType markdown setlocal syn=off

    au FileType python setlocal foldmethod=indent foldlevel=99

    au FileType sh setlocal ts=2 sts=2 sw=2 et ai
augroup END
" }}}
" THEME & LAYOUT {{{
colorscheme badwolf
set number relativenumber  " show hybrid line numbers
set showcmd " show last command in bottom bar
set cursorline " highlight current line
syntax enable " enable syntax processing
" }}}
" MISC {{{
set nocompatible

set wildmenu " visual autocomplete for command menu
set lazyredraw " redraw only when we need to
set showmatch " highlight matching [{()}]
set cursorline

set modeline
set modelines=1

set backspace=2 " backspace over everything
set scrolloff=5

" jk is escape (only for insert mode)
inoremap jk <esc>
inoremap JK <esc>

" Spellcheck
set spelllang=en
nnoremap<leader>s :set spell!<cr>
" }}}
" QUICKEDITING {{{
nnoremap <leader>ev <C-w>s<C-w>j<C-w>L:e $MYVIMRC<CR>
nnoremap <leader>es <C-w>s<C-w>j<C-w>L:e ~/.vim/UltiSnips/<CR>
nnoremap <leader>ed <C-w>s<C-w>j<C-w>L:e ~/Dropbox/<CR>
nnoremap <leader>ew <C-w>s<C-w>j<C-w>L:e ~/Documents/UWaterloo\ Undergrad/Term_3B_W19/<CR>
" }}}
" SEARCHING {{{
set incsearch
set hlsearch
nnoremap <leader><space> :nohlsearch<CR>
" }}}
" TEXT FORMATTING {{{
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent

set list
set listchars=tab:▸\ ,eol:¬

set showbreak=↪
" }}}
" NAVIGATING {{{
" move vertically by visual line (only in normal mode)
nnoremap j gj
nnoremap k gk

" disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" map H/L to move to first/last non-space character of the line
nnoremap H ^
nnoremap L g_

" Quickfix
nnoremap ]q :cnext<cr>zz
nnoremap [q :cprev<cr>zz

" Open new line above/below current line
nnoremap o o<esc>
nnoremap O O<esc>
" }}}
" FOLDING {{{
set foldenable
set foldmethod=indent
set foldlevelstart=10
set foldnestmax=10

" space open/closes folds
nnoremap <space> za
" }}}
" FUNCTIONS {{{1
" Fix Spelling Error {{{2
function! FixLastSpellCheckError()
    normal! mm[s1z=`m
endfunction
"}}}
" }}}
" TMUX {{{
if exists('$TMUX')
  function! TmuxOrSplitSwitch(wincmd, tmuxdir)
    let previous_winnr = winnr()
    silent! execute "wincmd " . a:wincmd
    if previous_winnr == winnr()
      call system("tmux select-pane -" . a:tmuxdir)
      redraw!
    endif
  endfunction

  let previous_title = substitute(system("tmux display-message -p '#{pane_title}'"), '\n', '', '')
  let &t_ti = "\<Esc>]2;vim\<Esc>\\" . &t_ti
  let &t_te = "\<Esc>]2;". previous_title . "\<Esc>\\" . &t_te

  nnoremap <silent> <C-h> :call TmuxOrSplitSwitch('h', 'L')<cr>
  nnoremap <silent> <C-j> :call TmuxOrSplitSwitch('j', 'D')<cr>
  nnoremap <silent> <C-k> :call TmuxOrSplitSwitch('k', 'U')<cr>
  nnoremap <silent> <C-l> :call TmuxOrSplitSwitch('l', 'R')<cr>
else
  map <C-h> <C-w>h
  map <C-j> <C-w>j
  map <C-k> <C-w>k
  map <C-l> <C-w>l
endif
" }}}
" ALE {{{
let g:ale_sign_column_always = 1
" }}}
" AUTOPAIRS {{{
let g:AutoPairsShortcutToggle = '<leader>ap'
" }}}
" ULTISNIPS {{{
let g:UltiSnipsDirectories="~/.vim/UltiSnips"
let g:UltiSnipsEditSplit="vertical"
" }}}
" NOTES {{{1
" Vim-Pandoc {{{2
nnoremap <silent> ~~ :exe "norm v$hS~"<CR>
nnoremap <silent> ^^ :exe "norm v$hS^"<CR>
vmap ~ S~
vmap ^ S^

let g:pandoc#filetypes#handled = ["pandoc", "markdown"]
let g:pandoc#after#modules#enabled = ["ultisnips", "tablemode"]
" }}}
" }}}
" MATH {{{1
" Greek {{{2
map! <C-v>GA Γ
map! <C-v>DE Δ
map! <C-v>TH Θ
map! <C-v>LA Λ
map! <C-v>XI Ξ
map! <C-v>PI Π
map! <C-v>SI Σ
map! <C-v>PH Φ
map! <C-v>PS Ψ
map! <C-v>OM Ω
map! <C-v>al α
map! <C-v>be β
map! <C-v>ga γ
map! <C-v>de δ
map! <C-v>ep ε
map! <C-v>ze ζ
map! <C-v>et η
map! <C-v>th θ
map! <C-v>io ι
map! <C-v>ka κ
map! <C-v>la λ
map! <C-v>mu μ
map! <C-v>nu ν
map! <C-v>xi ξ
map! <C-v>pi π
map! <C-v>rh ρ
map! <C-v>si σ
map! <C-v>ta τ
map! <C-v>ps ψ
map! <C-v>om ω
map! <C-v>ph ϕ
" }}}
" Math {{{2
map! <C-v>ll →
map! <C-v>hh ←
map! <C-v>kk ↑
map! <C-v>jj ↓
map! <C-v>hl ↔
map! <C-v>= ∝
map! <C-v>~ ≈
map! <C-v>~= ≅
map! <C-v>!= ≠
map! <C-v>!> ⇸
map! <C-v>~> ↝
map! <C-v>>= ≥
map! <C-v><= ≤
map! <C-v>0  °
map! <C-v>*  •
map! <C-v>+  ⊕
map! <C-v>+- ±
map! <C-v>inf ∞
" }}}
" }}}

" vim:foldmethod=marker:foldlevel=0
